/**
 * Common Type Definitions
 * Generated by type checking fixer
 */

import { NextApiRequest, NextApiResponse } from 'next';
import { Session } from 'next-auth';

// API Response types
export interface ApiResponse<T = unknown> {
  success: boolean;
  data?: T;
  error?: string;
  message?: string;
  timestamp: string;
}

// User types
export interface User {
  id: string;
  email: string;
  name?: string;
  role: string;
  createdAt: Date;
  updatedAt: Date;
}

// Component types
export interface ComponentProps {
  className?: string;
  children?: React.ReactNode;
  [key: string]: unknown;
}

export interface ComponentState {
  loading: boolean;
  error?: string;
  data?: unknown;
}

// Configuration types
export interface Config {
  [key: string]: unknown;
}

export interface Options {
  [key: string]: unknown;
}

export interface Settings {
  [key: string]: unknown;
}

// Form types
export interface FormData {
  [key: string]: unknown;
}

// Database types
export interface DatabaseRow {
  id: string;
  [key: string]: unknown;
}

// Event types
export interface CustomEvent extends Event {
  detail?: unknown;
}

// Utility types
export type Optional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;
export type RequiredFields<T, K extends keyof T> = T & Required<Pick<T, K>>;
export type DeepPartial<T> = {
  [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P];
};
